name:  Image Build, Test
on:
   pull_request:
      branches:
        - main
   workflow_dispatch:
jobs:
  docker:
    name: "${{ matrix.DEPLOYMENT_NAME }}  USE_FROZEN=${{ matrix.USE_FROZEN }} ${{ matrix.CAL_VERSION }} -- Image Build, Test"
    runs-on: ubuntu-22.04

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        DEPLOYMENT_NAME: [ jwebbinar, roman, tike]
        USE_FROZEN: [ 1 ]
        CAL_VERSION: [ none ]
        FREEZE_CHILL: [ 1 ]
        OWNER: [ jupyter ]

    with:
      repo-token: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      actions: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Environment
        shell: bash
        run: |
           scripts/image-configure ${{ matrix.DEPLOYMENT_NAME }}  --use-frozen ${{ matrix.USE_FROZEN }} --freeze-chill ${{ matrix.FREEZE_CHILL }} --cal-version ${{ matrix.CAL_VERSION }}  --owner ${{ MATRIX.owner }}
           df -h

      - name: Early exit for unaffected builds
        shell: bash
        run: |
            source setup-env

            branch_changes_obj deployments/common
            common_changes=$?

            branch_changes_obj deployments/${{ matrix.DEPLOYMENT_NAME }}
            deployment_changes=$?

            if [[ ${common_changes} == "0" || ${deployment_changes} == "0" ]]; then
            else
                echo "This build deployment is nominally unaffected by the changes in this PR."
                gh run cancel ${{ github.run_id }}
                gh run wratch ${{ github.run_id }}
            fi

      - name: Free Disk Space,  Enlarge Swapfile
        shell: bash
        run: |
             df -h
             sudo apt clean
             docker rmi $(docker image ls -aq)
             docker container prune -f
             sudo rm -rf "/usr/local/share/boost"
             sudo rm -rf "$AGENT_TOOLSDIRECTORY"
             sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
             sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
             sudo swapoff -a
             sudo rm -f /swapfile
             sudo fallocate -l 24G /swapfile
             sudo chmod 0600 /swapfile
             sudo mkswap /swapfile
             sudo swapon /swapfile
             cat /proc/meminfo
             df -h

      - name: Image Build
        shell: bash
        run: |
           source setup-env
           scripts/image-build
           df -h
           docker system df
           docker system prune
           docker image ls
           df -h

      - name: Git Diffs (Frozen Version Specs)
        shell: bash
        run: git diff

      - name: Image Functional Tests
        shell: bash
        run: |
           df -h
           source setup-env
           scripts/image-test
           df -h

      # XXXX Trivy missing config to run from built image, fails

      # ----- - name: Run Trivy vulnerability scanner on image
      # -----   uses: aquasecurity/trivy-action@master
      # -----   with:
      # -----     scan-type: image
      # -----     image-ref: notebook-${{ matrix.DEPLOYMENT_NAME }}
      # -----     ignore-unfixed: true
      # -----     format: table
      # -----     vuln-type: os,library
      # -----     severity: 'CRITICAL,HIGH,MEDIUM'


      # Anchore obsolete

      # ----- - name: Scan image
      # -----   uses: anchore/scan-action@v3
      # -----   with:
      # -----     fail-build: false
      # -----     severity-cutoff: high
      # -----     output-format: table
      # -----     image: notebook-${{ matrix.DEPLOYMENT_NAME }}
